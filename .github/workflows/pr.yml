name: Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node_modules-${{ github.ref_name }}-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            node_modules-${{ github.ref_name  }}-
            node_modules-master-
            node_modules-main
            node_modules-

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Lint
        run: pnpm run lint

  test-api:
    runs-on: ubuntu-latest
    needs: lint
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node_modules-${{ github.ref_name }}-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            node_modules-${{ github.ref_name  }}-
            node_modules-master-
            node_modules-main
            node_modules-

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Install Doppler
        run: (curl -Ls --tlsv1.2 --proto "=https" --retry 3 https://cli.doppler.com/install.sh || wget -t 3 -qO- https://cli.doppler.com/install.sh) | sudo sh

      - name: Build
        run: pnpm run build

      - name: Set up test env
        run: pnpm run env:test:up

      - name: Run test
        run: pnpm run test

      - name: Tear down test env
        run: pnpm run env:test:down

  test-e2e:
    runs-on: ubuntu-latest
    needs: lint
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node_modules-${{ github.ref_name }}-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            node_modules-${{ github.ref_name  }}-
            node_modules-master-
            node_modules-main
            node_modules-

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Install Doppler
        run: (curl -Ls --tlsv1.2 --proto "=https" --retry 3 https://cli.doppler.com/install.sh || wget -t 3 -qO- https://cli.doppler.com/install.sh) | sudo sh

      - name: Build
        run: pnpm run build

      # - name: Set up test env
      #   run: pnpm run env:test:up

      # - name: Cypress run
      #   uses: cypress-io/github-action@v5
      #   with:
      #     build: pnpm run build
      #     start: pnpm run dev
      #     project: ./apps/web

      # - name: Tear down test env
      #   run: pnpm run env:test:down
